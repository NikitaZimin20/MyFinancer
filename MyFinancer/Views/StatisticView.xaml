<UserControl x:Class="MyFinancer.Views.StatisticView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MyFinancer.Views"
             mc:Ignorable="d" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:popupcustomlibrary="clr-namespace:PopupCustomLibrary;assembly=PopupCustomLibrary"
             
             d:DesignHeight="756" d:DesignWidth="1344">
    <UserControl.Resources>

        <!--#region Button Visual Style-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--#endregion-->

        <!--#region Home Button Style-->
        <Style x:Key="HomeBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Profile Button Style-->
        <Style x:Key="ProfileBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Settings Button Style-->
        <Style x:Key="SettingsBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#3A6180"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#3A6180"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Close Button Style-->
        <Style x:Key="CloseBtnStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

    </UserControl.Resources>

    <Grid Background="#1C2F3E" x:Name="MainGrid">
        <Grid.Effect>
            <DropShadowEffect
                BlurRadius="20"
                ShadowDepth="2"
                Direction="-90"
                Color="Gray">

            </DropShadowEffect>
        </Grid.Effect>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="285"/>
            <ColumnDefinition Width="500"/>

            <ColumnDefinition Width="500*"/>
            <ColumnDefinition Width="59*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>

            <RowDefinition Height="80"  />
            <RowDefinition  />
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <TextBlock Height="80" Text="Expected" FontFamily="{DynamicResource MaterialDesignFont}" Foreground="White" FontSize="60" Margin="58,10,0,0" Grid.Column="1" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="246"/>
        <TextBlock Height="80" Text="Waste" FontFamily="{DynamicResource MaterialDesignFont}" Foreground="White" FontSize="60" Margin="58,10,0,0" Grid.Column="1" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Left" Width="167"/>
        <TextBlock Height="80" Text="Earn" FontFamily="{DynamicResource MaterialDesignFont}" Foreground="White" FontSize="60" Margin="79,10,0,0" Grid.Column="2" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Width="120"/>
        <TextBlock Height="80" Text="Balance" FontFamily="{DynamicResource MaterialDesignFont}" Foreground="White" FontSize="60" Margin="79,10,0,0" Grid.Column="2" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Left" Width="213"/>
        <ContentControl  Grid.Column="1" Grid.Row="2" Height="250" Width="300" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,78,0,0"/>
        <ContentControl  Grid.Column="1" Grid.Row="1" Height="250" Width="300" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,78,0,0"/>
        <ContentControl  Grid.Column="2" Grid.Row="2" Height="250" Width="300" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,78,0,0"/>
        <ContentControl  Grid.Column="2" Grid.Row="1" Height="250" Width="300" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,78,0,0"/>



        <StackPanel Height="80"
                    Orientation="Horizontal"
               Grid.ColumnSpan="4"
                  VerticalAlignment="Center"
                  Background="#233C4F" HorizontalAlignment="Left" Width="1344">
            <CheckBox x:Name="cbToggleMenu" HorizontalAlignment="Left" Width="130">
                <CheckBox.Template>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent">
                            <Viewbox Width="105" Height="35">
                                <Path
                                        Data="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"
                                        Fill="White"
                                        Stretch="Fill" />
                            </Viewbox>
                        </Grid>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>

            <TextBlock Text="Finance Controller"
                          
                           Grid.Row="4"
                           FontFamily="open sans condensed"
                           FontSize="46"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="#E0FFFF"
                           Margin="350 0">
            </TextBlock>
            <Button 
                Height="60" 
                Width="80" 
                HorizontalAlignment="Right" 
                Margin="60 10"   
                Background="Transparent"
                BorderThickness="0"  
                Cursor="Hand"
                Command="{StaticResource CloseApp}"
                VerticalAlignment="Top">

                <materialDesign:PackIcon Kind="Close" Height="60" Width="50" VerticalAlignment="Center" />
            </Button>
        </StackPanel>
        <popupcustomlibrary:PopupMenu  
            IsOpen="{Binding IsChecked,ElementName=cbToggleMenu}"
            Margin="0,0,155,0" 
            Grid.Row="1" 
            Grid.RowSpan="2"
            OpenCloseDuration="0:0:0.15">

            <popupcustomlibrary:PopupMenu.Content>

                <StackPanel Orientation="Vertical" Grid.Row="0" Grid.RowSpan="2" Width="130" HorizontalAlignment="Left" Background="#14212B">

                    <Button x:Name="AddBtn"   BorderThickness="0" Height="100" Width="130" Margin="0 180 0 30" Background="Transparent"  
                    HorizontalAlignment="Center" Cursor="Hand"   Style="{DynamicResource HomeBtnStyle}" >


                        <materialDesign:PackIcon Kind="Money" Foreground="White" Width="80" Height="80" Margin="0 0" />
                    </Button>
                    <Button x:Name="Wastebtn"
                            BorderThickness="0" 
                            Height="100" 
                            Width="130"
                            Margin="0 0 0 30" 
                            Background="Transparent" 
                            HorizontalAlignment="Center" 
                            Cursor="Hand">
                        <materialDesign:PackIcon 
                            Kind="MoneyOff" 
                            Width="80" 
                            Height="80" 
                            Margin="0 0" 
                            Foreground="White"/>
                    </Button>
                    <Button 
                        x:Name="Planbtn" 
                        BorderThickness="0" 
                        Height="100"
                        Width="130" 
                        Margin="0 20" 
                        Background="Transparent" 
                        HorizontalAlignment="Center" 
                        Cursor="Hand" >
                        <materialDesign:PackIcon Kind="CalendarTask" Width="80" Height="80" Foreground="White" Margin="0 0" />
                    </Button>

                </StackPanel>
            </popupcustomlibrary:PopupMenu.Content>
        </popupcustomlibrary:PopupMenu>

    </Grid>
</UserControl>
